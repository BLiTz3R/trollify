{"version":3,"sources":["components/Logo/logo.png","components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FaceRecognition","_ref","imageUrl","box","react_default","a","createElement","className","id","alt","src","width","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","display","justifyContent","onClick","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","htmlFor","type","name","onChange","React","Component","Register","onNameChange","Logo","tilt_default","options","max","height","paddingTop","troll","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","concat","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","test","count","assign","catch","console","log","err","_this$state","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_SignIn_SignIn","components_Register_Register","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8fb8c81a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bd866bc7.png\";","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className='center ma'>\n      <div className='absolute mt2'>\n        <img id='inputimage' alt='' src={imageUrl} width='800px'/>\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceRecognition;","import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n        <p onClick={() => onRouteChange('signout')} className='f3 link dim black pa3 pointer'>Log Out</p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n        <p onClick={() => onRouteChange('signin')} className='f3 link dim black pa3 pointer'>Log In</p>\n        <p onClick={() => onRouteChange('register')} className='f3 link dim black pa3 pointer'>Register</p>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://trollify-server.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Log In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Log in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      name: ''\n    }\n  }\n\n  onNameChange = (event) => {\n    this.setState({name: event.target.value})\n  }\n\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSignIn = () => {\n    fetch('https://trollify-server.herokuapp.com/register', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user)\n          this.props.onRouteChange('home');\n        }\n      })\n  }\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.onNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p onClick={() => onRouteChange('signin')} className=\"f6 link dim black db pointer\">Log in</p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport troll from './logo.png';\nimport './Logo.css';\n\nconst Logo = () => {\n  return (\n    <div className='center mb2'>\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 55 }} style={{ height: 200, width: 200 }} >\n        <div className=\"Tilt-inner pa3\">\n          <img style={{paddingTop: '5px'}} alt='logo' src={troll}/>\n        </div>\n      </Tilt>\n    </div>\n  );\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <p className='f3'>\n        {'Please enter a valid image URL with a face to trollify.'}\n      </p>\n      <div className='center'>\n        <div className='form center pa4 br3 shadow-5'>\n          <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\n          <button\n            className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\n            onClick={onButtonSubmit}\n          >Go!</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n  return (\n    <div>\n      <div className='white f3'>\n        {`${name}, you have trollified `}<span className=\"f1\">{`${entries}`}</span>\n        {\n          (entries === '1') ? ' image!' : ' images!'\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Rank;","import React, { Component } from 'react';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: (clarifaiFace.left_col * width) - (20*clarifaiFace.left_col),\n      topRow: clarifaiFace.top_row * height,\n      rightCol: (width - (clarifaiFace.right_col * width)) - (20*clarifaiFace.right_col),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    const imgUrl = /(http[s]?:\\/\\/.*)/i;\n    if (imgUrl.test(this.state.input)) {\n      this.setState({imageUrl: this.state.input});\n      fetch('https://trollify-server.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://trollify-server.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, { entries: count}))\n          })\n          .catch((console.log));\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n    }\n  };\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n            (route === 'signin' || route === 'signout')\n             ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}